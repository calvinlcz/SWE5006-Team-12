package nusiss.swe5006.team12.todolist.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RegisteredAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisteredAllPropertiesEquals(Registered expected, Registered actual) {
        assertRegisteredAutoGeneratedPropertiesEquals(expected, actual);
        assertRegisteredAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisteredAllUpdatablePropertiesEquals(Registered expected, Registered actual) {
        assertRegisteredUpdatableFieldsEquals(expected, actual);
        assertRegisteredUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisteredAutoGeneratedPropertiesEquals(Registered expected, Registered actual) {
        assertThat(actual)
            .as("Verify Registered auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisteredUpdatableFieldsEquals(Registered expected, Registered actual) {
        assertThat(actual)
            .as("Verify Registered relevant properties")
            .satisfies(a -> assertThat(a.getAccountNo()).as("check accountNo").isEqualTo(expected.getAccountNo()))
            .satisfies(a -> assertThat(a.getLinkWorkspace()).as("check linkWorkspace").isEqualTo(expected.getLinkWorkspace()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRegisteredUpdatableRelationshipsEquals(Registered expected, Registered actual) {
        assertThat(actual)
            .as("Verify Registered relationships")
            .satisfies(a -> assertThat(a.getWorkSpaces()).as("check workSpaces").isEqualTo(expected.getWorkSpaces()));
    }
}
