name: JHipster CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checkout-and-setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: 22
      java-version: 17
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

  eslint-check:
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install Dependencies
        run: npm install
      - name: Run ESLint
        run: npm run lint

  frontend-tests:
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install Dependencies
        run: npm install
      - name: Run Frontend Tests
        run: npm test

  frontend-build:
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install Dependencies
        run: npm install
      - name: Build Frontend
        run: npm run build

  backend-tests:
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Make Maven Wrapper Executable
        run: chmod +x ./mvnw
      - name: Run Backend Tests
        run: ./mvnw test

  codeql-analysis:
    runs-on: ubuntu-latest
    needs: backend-tests
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: java, javascript
      - name: Build for CodeQL
        run: ./mvnw compile
      - uses: github/codeql-action/analyze@v3

  docker-build-push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-jhipster-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-jhipster-app:latest

  gcp-deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Deploy to GCP VM via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-jhipster-app:latest
            docker stop jhipster-app || true
            docker rm jhipster-app || true
            docker run -d -p 8080:8080 --name jhipster-app ${{ secrets.DOCKER_USERNAME }}/my-jhipster-app:latest
