name: JHipster CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Java (for backend)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Set up Node.js (for frontend)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Step 4: Install frontend dependencies
      - name: Install Frontend Dependencies
        run: npm install

      # Step 5: Run frontend tests
      - name: Run Frontend Tests
        run: npm test

      # Step 6: Build frontend
      - name: Build Frontend
        run: npm run build

      # Step 7: Make Maven wrapper executable
      - name: Make Maven Wrapper Executable
        run: chmod +x ./mvnw

      # Step 8: Run backend tests
      - name: Run Backend Tests
        run: ./mvnw test

      # Step 9: Build backend JAR
      - name: Build Backend
        run: ./mvnw package -DskipTests

      # Step 10: Docker login (only on push to main)
      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 11: Build and push Docker image (only on push to main)
      - name: Build and Push Docker Image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-jhipster-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-jhipster-app:latest

      # Step 12: Deploy to GCP VM (only on push to main)
      - name: Deploy to GCP VM via SSH
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-jhipster-app:latest
            docker stop jhipster-app || true
            docker rm jhipster-app || true
            docker run -d -p 8080:8080 --name jhipster-app ${{ secrets.DOCKER_USERNAME }}/my-jhipster-app:latest
